{"version":3,"sources":["./src/app/@core/models/token-local.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/change-password/change-password.component.ts","./src/app/auth/change-password/change-password.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/logout/logout.component.ts","./src/app/auth/logout/logout.component.html","./src/app/auth/welcome/welcome.component.ts","./src/app/auth/welcome/welcome.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["\r\nexport class TokenLocal {\r\n    createdAt: number;\r\n    name: string;\r\n    ownerStrategyName: string;\r\n    value: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { NgxLoginComponent } from './login/login.component';\r\nimport { NgxLogoutComponent } from './logout/logout.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: NgxLoginComponent, \r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: NgxLogoutComponent, \r\n      },\r\n      {\r\n        path: 'welcome',\r\n        component: WelcomeComponent, \r\n      },\r\n      {\r\n        path: 'change-password',\r\n        component: ChangePasswordComponent, \r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NgxAuthRoutingModule {\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { NgxAuthRoutingModule } from './auth-routing.module';\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { \r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbInputModule\r\n} from '@nebular/theme';\r\nimport { NgxLoginComponent } from './login/login.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NgxAuthRoutingModule,\r\n\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    NgxLoginComponent,\r\n    WelcomeComponent,\r\n    ChangePasswordComponent, \r\n  ],\r\n})\r\nexport class NgxAuthModule {\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { TokenLocal } from \"../../@core/models/token-local\";\r\n\r\n@Component({\r\n  selector: \"ngx-change-password\",\r\n  templateUrl: \"./change-password.component.html\",\r\n  styleUrls: [\"./change-password.component.scss\"],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  local: TokenLocal = new TokenLocal();\r\n  constructor() {\r\n    this.local = JSON.parse(localStorage.getItem(\"auth_app_token\"));\r\n    document.location.href = \"http://login.goods-mart.com/#/auth/change-password?tk=\" + this.local.value;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>You will be redirected right now!</p>\r\n","import { Component } from '@angular/core';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class NgxLoginComponent extends NbLoginComponent {\r\n}","<h1 id=\"title\" class=\"title\">Login</h1>\r\n<p class=\"sub-title\">Hello! Log in with your email.</p>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<form (ngSubmit)=\"login()\" #form=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">Email address:</label>\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.email\"\r\n           #email=\"ngModel\"\r\n           name=\"email\"\r\n           id=\"input-email\"\r\n           pattern=\".+@.+\\..+\"\r\n           placeholder=\"Email address\"\r\n           fieldSize=\"large\"\r\n           autofocus\r\n           [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.email.required')\"\r\n           [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\r\n    <ng-container *ngIf=\"email.invalid && email.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n        Email is required!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\r\n        Email should be the real one!\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <span class=\"label-with-link\">\r\n      <label class=\"label\" for=\"input-password\">Password:</label>\r\n    </span>\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.password\"\r\n           #password=\"ngModel\"\r\n           name=\"password\"\r\n           type=\"password\"\r\n           id=\"input-password\"\r\n           placeholder=\"Password\"\r\n           fieldSize=\"large\"\r\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.password.required')\"\r\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched \">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        Password is required!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\r\n        Password should contain\r\n        from {{ getConfigValue('forms.validation.password.minLength') }}\r\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n        characters\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group accept-group\">\r\n    <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\" *ngIf=\"rememberMe\">Remember me</nb-checkbox>\r\n  </div>\r\n\r\n  <button nbButton\r\n          fullWidth\r\n          status=\"primary\"\r\n          size=\"large\"\r\n          [disabled]=\"submitted || !form.valid\"\r\n          [class.btn-pulse]=\"submitted\">\r\n    Sign In\r\n  </button>\r\n</form>","import { Component } from '@angular/core';\r\nimport { NbLogoutComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-logout',\r\n  templateUrl: './logout.component.html',\r\n})\r\nexport class NgxLogoutComponent extends NbLogoutComponent {\r\n    \r\n}","<div>Logging out, please wait...</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NbTokenLocalStorage } from \"@nebular/auth\";\r\nimport { CookieService } from \"ngx-cookie\";\r\nimport { AuthService } from \"../../@core/app-services/auth.service\";\r\nimport { TokenLocal } from \"../../@core/models/token-local\";\r\nimport { MenuSharedService } from \"../../@core/shared-services/menu-shared.service\";\r\n\r\n@Component({\r\n  selector: \"ngx-welcome\",\r\n  templateUrl: \"./welcome.component.html\",\r\n  styleUrls: [\"./welcome.component.scss\"],\r\n})\r\nexport class WelcomeComponent {\r\n  tokenLocal: TokenLocal;\r\n\r\n  constructor(\r\n    route: ActivatedRoute, private router: Router, private AuthService: AuthService, private cookieService: CookieService,\r\n    \r\n  ) {\r\n    cookieService.removeAll();\r\n    route.queryParams.subscribe((params) => {\r\n      // Defaults to 0 if no query param provided.\r\n      var token = params[\"tk\"] || 0;\r\n      if (token != 0) {\r\n        this.tokenLocal = new TokenLocal();\r\n        this.tokenLocal.createdAt = new Date().getTime();\r\n        this.tokenLocal.name = \"nb:auth:jwt:token\";\r\n        this.tokenLocal.ownerStrategyName = \"email\";\r\n        this.tokenLocal.value = token;\r\n        localStorage.setItem('auth_app_token', JSON.stringify(this.tokenLocal));\r\n        // AuthService.getSystemAccess(3).subscribe(data => {\r\n        //   this.systemAccess = data;\r\n        //   cookieService.putObject('SystemAccess', data);\r\n        //   console.log(JSON.parse(cookieService.get('SystemAccess')));\r\n        //   setTimeout(() => this.router.navigate([\"/pages/dashboard\"]), 300);\r\n        // });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p>welcome to the CRM App, you will be redirected right now!</p>\r\n"],"sourceRoot":"webpack:///"}
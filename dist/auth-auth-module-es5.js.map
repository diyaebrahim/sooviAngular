{"version":3,"sources":["webpack:///src/app/@core/models/token-local.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/change-password/change-password.component.ts","webpack:///src/app/auth/change-password/change-password.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/logout/logout.component.ts","webpack:///src/app/auth/logout/logout.component.html","webpack:///src/app/auth/welcome/welcome.component.ts","webpack:///src/app/auth/welcome/welcome.component.html"],"names":["TokenLocal","routes","path","component","children","NgxAuthRoutingModule","forChild","imports","exports","NgxAuthModule","declarations","ChangePasswordComponent","local","JSON","parse","localStorage","getItem","document","location","href","value","selector","templateUrl","styleUrls","NgxLoginComponent","login","NgxLogoutComponent","WelcomeComponent","route","router","AuthService","cookieService","removeAll","queryParams","subscribe","params","token","tokenLocal","createdAt","Date","getTime","name","ownerStrategyName","setItem","stringify"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["\r\nexport class TokenLocal {\r\n    createdAt: number;\r\n    name: string;\r\n    ownerStrategyName: string;\r\n    value: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { NgxLoginComponent } from './login/login.component';\r\nimport { NgxLogoutComponent } from './logout/logout.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: NgxLoginComponent, \r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: NgxLogoutComponent, \r\n      },\r\n      {\r\n        path: 'welcome',\r\n        component: WelcomeComponent, \r\n      },\r\n      {\r\n        path: 'change-password',\r\n        component: ChangePasswordComponent, \r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NgxAuthRoutingModule {\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { NgxAuthRoutingModule } from './auth-routing.module';\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { \r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbInputModule\r\n} from '@nebular/theme';\r\nimport { NgxLoginComponent } from './login/login.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NgxAuthRoutingModule,\r\n\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    NgxLoginComponent,\r\n    WelcomeComponent,\r\n    ChangePasswordComponent, \r\n  ],\r\n})\r\nexport class NgxAuthModule {\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { TokenLocal } from \"../../@core/models/token-local\";\r\n\r\n@Component({\r\n  selector: \"ngx-change-password\",\r\n  templateUrl: \"./change-password.component.html\",\r\n  styleUrls: [\"./change-password.component.scss\"],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  local: TokenLocal = new TokenLocal();\r\n  constructor() {\r\n    this.local = JSON.parse(localStorage.getItem(\"auth_app_token\"));\r\n    document.location.href = \"http://login.goods-mart.com/#/auth/change-password?tk=\" + this.local.value;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>You will be redirected right now!</p>\r\n","import { Component } from '@angular/core';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class NgxLoginComponent extends NbLoginComponent {\r\n}","<h1 id=\"title\" class=\"title\">Login</h1>\r\n<p class=\"sub-title\">Hello! Log in with your email.</p>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<form (ngSubmit)=\"login()\" #form=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">Email address:</label>\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.email\"\r\n           #email=\"ngModel\"\r\n           name=\"email\"\r\n           id=\"input-email\"\r\n           pattern=\".+@.+\\..+\"\r\n           placeholder=\"Email address\"\r\n           fieldSize=\"large\"\r\n           autofocus\r\n           [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.email.required')\"\r\n           [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\r\n    <ng-container *ngIf=\"email.invalid && email.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n        Email is required!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\r\n        Email should be the real one!\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <span class=\"label-with-link\">\r\n      <label class=\"label\" for=\"input-password\">Password:</label>\r\n    </span>\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.password\"\r\n           #password=\"ngModel\"\r\n           name=\"password\"\r\n           type=\"password\"\r\n           id=\"input-password\"\r\n           placeholder=\"Password\"\r\n           fieldSize=\"large\"\r\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.password.required')\"\r\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched \">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        Password is required!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\r\n        Password should contain\r\n        from {{ getConfigValue('forms.validation.password.minLength') }}\r\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n        characters\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group accept-group\">\r\n    <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\" *ngIf=\"rememberMe\">Remember me</nb-checkbox>\r\n  </div>\r\n\r\n  <button nbButton\r\n          fullWidth\r\n          status=\"primary\"\r\n          size=\"large\"\r\n          [disabled]=\"submitted || !form.valid\"\r\n          [class.btn-pulse]=\"submitted\">\r\n    Sign In\r\n  </button>\r\n</form>","import { Component } from '@angular/core';\r\nimport { NbLogoutComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-logout',\r\n  templateUrl: './logout.component.html',\r\n})\r\nexport class NgxLogoutComponent extends NbLogoutComponent {\r\n    \r\n}","<div>Logging out, please wait...</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NbTokenLocalStorage } from \"@nebular/auth\";\r\nimport { CookieService } from \"ngx-cookie\";\r\nimport { AuthService } from \"../../@core/app-services/auth.service\";\r\nimport { TokenLocal } from \"../../@core/models/token-local\";\r\nimport { MenuSharedService } from \"../../@core/shared-services/menu-shared.service\";\r\n\r\n@Component({\r\n  selector: \"ngx-welcome\",\r\n  templateUrl: \"./welcome.component.html\",\r\n  styleUrls: [\"./welcome.component.scss\"],\r\n})\r\nexport class WelcomeComponent {\r\n  tokenLocal: TokenLocal;\r\n\r\n  constructor(\r\n    route: ActivatedRoute, private router: Router, private AuthService: AuthService, private cookieService: CookieService,\r\n    \r\n  ) {\r\n    cookieService.removeAll();\r\n    route.queryParams.subscribe((params) => {\r\n      // Defaults to 0 if no query param provided.\r\n      var token = params[\"tk\"] || 0;\r\n      if (token != 0) {\r\n        this.tokenLocal = new TokenLocal();\r\n        this.tokenLocal.createdAt = new Date().getTime();\r\n        this.tokenLocal.name = \"nb:auth:jwt:token\";\r\n        this.tokenLocal.ownerStrategyName = \"email\";\r\n        this.tokenLocal.value = token;\r\n        localStorage.setItem('auth_app_token', JSON.stringify(this.tokenLocal));\r\n        // AuthService.getSystemAccess(3).subscribe(data => {\r\n        //   this.systemAccess = data;\r\n        //   cookieService.putObject('SystemAccess', data);\r\n        //   console.log(JSON.parse(cookieService.get('SystemAccess')));\r\n        //   setTimeout(() => this.router.navigate([\"/pages/dashboard\"]), 300);\r\n        // });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p>welcome to the CRM App, you will be redirected right now!</p>\r\n"]}